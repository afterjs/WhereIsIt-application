/*import { RFPercentage, RFValue } from "react-native-responsive-fontsize";
import { heightPercentageToDP } from "../../../Config/snippets";
import React, { useState, useEffect } from "react";
import { StyleSheet, View, Text, FlatList, TouchableOpacity, ScrollView, Alert } from "react-native";
import AnalyzePin from "./AnalyzePin";

import { database, firebase } from "../../../Config/firebase";

export default (props) => {
  const [uid, setUid] = useState("");
  const [showScreen, setShowScreen] = useState(true);
  const [data, setData] = useState([]);

  let changeScren = (uid) => {
    setUid(uid);
    screen();
  };

  let screen = () => {
    setShowScreen(!showScreen);
  };

  const createThreeButtonAlert = (uid) =>
    Alert.alert("Pedidos Pendentes", "Deseja analisar o seguinte pin pendente? ", [
      {
        text: "Aceitar",
        onPress: () => changeScren(uid),
      },
      {
        text: "Cancelar",
        style: "cancel",
      },
    ]);

  function Item() {
    return data.map((item, index) => (
      <TouchableOpacity
        onPress={() => {
          createThreeButtonAlert(item.key);
        }}
        style={styles.row}
        key={index}
      >
        <View style={styles.groupData}>
          <View style={styles.rowData}>
            <Text style={styles.text}>Pin: </Text>
            <Text style={styles.info}>{item.title}</Text>
          </View>

          <View style={styles.rowData}>
            <Text style={styles.text}>Descrição: </Text>
            <Text style={styles.info}>{item.description.substring(0, 25)}...</Text>
          </View>
          <View style={styles.rowData}>
            <Text style={styles.text}>ID: </Text>
            <Text style={styles.info}>{item.key}</Text>
          </View>
        </View>
      </TouchableOpacity>
    ));
  }

  useEffect(() => {
    const unsubscribe = database.collection("pendingPins").onSnapshot((querySnapshot) => {
      const data = [];
      querySnapshot.forEach((doc) => {
        data.push({
          key: doc.id,
          title: doc.data().title,
          description: doc.data().description,
        });
      });
      setData(data);
    });
    return unsubscribe;
  }, []);

  if (showScreen) {
    return <AnalyzePin uid={uid} setScreen={screen}></AnalyzePin>;
  }

  return (
    <View style={styles.container}>
      <View>
        <Text style={styles.title}>Pedidos Pendentes</Text>
      </View>
      <ScrollView style={styles.scrollView}>{Item()}</ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#fff",
    paddingHorizontal: "5%",
  },
  scrollView: {},
  item: {
    flexDirection: "column",
    alignItems: "center",
    marginTop: 50,
  },
  row: {
    borderRadius: 5,
    backgroundColor: "#05164b36",
    flexDirection: "column",
    height: heightPercentageToDP("12%"),
    width: "100%",
    marginTop: 10,
    borderRadius: 5,
    borderWidth: 1.5,
    borderColor: "#05164b",
  },
  groupData: {
    padding: 10,
  },
  title: {
    alignItems: "center",
    fontSize: RFValue(20),
    fontWeight: "bold",
    color: "#05164B",
    textAlign: "center",
    marginTop: heightPercentageToDP("5%"),
  },
  rowData: {
    flexDirection: "row",
  },
  text: {
    fontSize: RFValue(20),
    fontWeight: "bold",
    color: "#DD4A48",
  },
  info: {
    fontSize: RFValue(20),
    fontWeight: "bold",
    color: "#F5F5F5",
  },
});
*/